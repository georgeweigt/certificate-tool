int base64_decode(uint8_t *buf, char *s, int length);
int base64_decode_digit(int c);
int main(int argc, char *argv[]);
void print_buf(uint8_t *buf, int length);
int parse_certificate(struct certinfo *p);
int parse_cert_level_1(struct certinfo *p, uint8_t *cert, int end);
int parse_cert_level_2(struct certinfo *p, uint8_t *cert, int offset, int end);
int parse_cert_level_3(struct certinfo *p, uint8_t *cert, int offset, int end);
int parse_public_key(struct certinfo *p, uint8_t *cert, int offset, int end);
int parse_rsa_info(struct certinfo *p, uint8_t *cert, int offset, int end);
int parse_signature_algorithm(struct certinfo *p, uint8_t *cert, int offset, int end);
int parse_signature(struct certinfo *p, uint8_t *cert, int offset, int end);
int parse_ecdsa_signature(struct certinfo *p, uint8_t *cert, int offset, int end);
int parse_validity(struct certinfo *p, uint8_t *cert, int offset, int end);
time_t convert_utc_time(uint8_t *s, int len);
time_t convert_generalized_time(uint8_t *s, int len);
int get_type_and_length(uint8_t *cert, int end, int *offset, int *type, int *length);
struct certinfo * read_certificate(char *filename);
void hmac_sha1(uint8_t *key, int keylen, uint8_t *buf, int len, uint8_t *out);
void sha1(uint8_t *buf, int len, uint8_t *out);
void sha1_with_key(uint8_t *key, uint8_t *buf, int len, uint8_t *out);
void sha1_hash_block(uint8_t *buf, uint32_t *hash);
void hmac_sha224(uint8_t *key, int keylen, uint8_t *buf, int len, uint8_t *out);
void sha224(uint8_t *buf, int len, uint8_t *out);
void sha224_with_key(uint8_t *key, uint8_t *buf, int len, uint8_t *out);
void sha224_hash_block(uint8_t *buf, uint32_t *hash);
void hmac_sha256(uint8_t *key, int keylen, uint8_t *buf, int len, uint8_t *out);
void sha256(uint8_t *buf, int len, uint8_t *out);
void sha256_with_key(uint8_t *key, uint8_t *buf, int len, uint8_t *out);
void sha256_hash_block(uint8_t *buf, uint32_t *hash);
void hmac_sha384(uint8_t *key, int keylen, uint8_t *buf, int len, uint8_t *out);
void sha384(uint8_t *buf, int len, uint8_t *out);
void sha384_with_key(uint8_t *key, uint8_t *buf, int len, uint8_t *out);
void sha384_hash_block(uint8_t *buf, uint64_t *hash);
void hmac_sha512(uint8_t *key, int keylen, uint8_t *buf, int len, uint8_t *out);
void sha512(uint8_t *buf, int len, uint8_t *out);
void sha512_with_key(uint8_t *key, uint8_t *buf, int len, uint8_t *out);
void sha512_hash_block(uint8_t *buf, uint64_t *hash);
